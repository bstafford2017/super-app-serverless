AWSTemplateFormatVersion: '2010-09-09'
Description: API Gateway with Cognito Authorizer, CORS, and Rate Limiting

Parameters:
  UserPoolId:
    Type: String
    Description: Cognito User Pool ID
  UserPoolClientId:
    Type: String
    Description: Cognito User Pool Client ID
  LambdaS3Key:
    Type: String
    Description: S3 key for the Lambda deployment package

Resources:
  ApiGatewayRestApi:
    Type: AWS::ApiGateway::RestApi
    Properties:
      Name: super-app-api

  ApiGatewayResource:
    Type: AWS::ApiGateway::Resource
    Properties:
      ParentId: !GetAtt ApiGatewayRestApi.RootResourceId
      PathPart: super-app
      RestApiId: !Ref ApiGatewayRestApi

  ApiGatewayMethod:
    Type: AWS::ApiGateway::Method
    Properties:
      AuthorizationType: COGNITO_USER_POOLS
      AuthorizerId: !Ref ApiGatewayCognitoAuthorizer
      HttpMethod: ANY
      ResourceId: !Ref ApiGatewayResource
      RestApiId: !Ref ApiGatewayRestApi
      Integration:
        IntegrationHttpMethod: POST
        Type: AWS_PROXY
        Uri:
          Fn::Sub: arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${CognitoAuthorizerLambda.Arn}/invocations
      MethodResponses:
        - StatusCode: 200
        - StatusCode: 401
      RequestParameters:
        method.request.header.Origin: false
      AuthorizationScopes:
        - openid

  ApiGatewayCognitoAuthorizer:
    Type: AWS::ApiGateway::Authorizer
    Properties:
      Name: CognitoAuthorizer
      Type: COGNITO_USER_POOLS
      RestApiId: !Ref ApiGatewayRestApi
      IdentitySource: method.request.header.Authorization
      ProviderARNs:
        - !Sub arn:aws:cognito-idp:${AWS::Region}:${AWS::AccountId}:userpool/${UserPoolId}

  ApiGatewayDeployment:
    Type: AWS::ApiGateway::Deployment
    DependsOn:
      - ApiGatewayMethod
    Properties:
      RestApiId: !Ref ApiGatewayRestApi
      StageName: prod

  ApiGatewayStage:
    Type: AWS::ApiGateway::Stage
    Properties:
      StageName: prod
      RestApiId: !Ref ApiGatewayRestApi
      DeploymentId: !Ref ApiGatewayDeployment
      MethodSettings:
        - ResourcePath: '/*'
          HttpMethod: '*'
          ThrottlingBurstLimit: 10
          ThrottlingRateLimit: 5
          MetricsEnabled: true
          DataTraceEnabled: true
      Variables: {}
      TracingEnabled: true
      Description: 'Prod stage with rate limiting and CORS'

  ApiGatewayOptionsMethod:
    Type: AWS::ApiGateway::Method
    Properties:
      AuthorizationType: NONE
      HttpMethod: OPTIONS
      ResourceId: !Ref ApiGatewayResource
      RestApiId: !Ref ApiGatewayRestApi
      Integration:
        Type: MOCK
        RequestTemplates:
          application/json: '{"statusCode": 200}'
        IntegrationResponses:
          - StatusCode: 200
            ResponseParameters:
              method.response.header.Access-Control-Allow-Headers: "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'"
              method.response.header.Access-Control-Allow-Methods: "'GET,POST,PUT,DELETE,OPTIONS'"
              method.response.header.Access-Control-Allow-Origin: "'*'"
            ResponseTemplates:
              application/json: ''
      MethodResponses:
        - StatusCode: 200
          ResponseParameters:
            method.response.header.Access-Control-Allow-Headers: true
            method.response.header.Access-Control-Allow-Methods: true
            method.response.header.Access-Control-Allow-Origin: true

  CognitoAuthorizerLambda:
    Type: AWS::Lambda::Function
    Properties:
      FunctionName: cognito-authorizer-lambda
      Handler: src/lambdas/cognito_authorizer.lambda_handler
      Role: !GetAtt LambdaCognitoBedrockAccessRole.Arn
      Runtime: python3.9
      Timeout: 10
      Code:
        S3Bucket:
          Ref: LambdaDeploymentBucket
        S3Key: !Ref LambdaS3Key

Outputs:
  ApiGatewayRestApiId:
    Description: API Gateway RestApi ID
    Value: !Ref ApiGatewayRestApi
  ApiGatewayUrl:
    Description: Invoke URL
    Value: !Sub 'https://${ApiGatewayRestApi}.execute-api.${AWS::Region}.amazonaws.com/prod/'

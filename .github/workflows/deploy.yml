name: Deploy Lambda and CloudFormation

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest
    env:
      AWS_REGION: us-east-2
      S3_BUCKET: ${{ secrets.LAMBDA_DEPLOYMENT_BUCKET }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.9'

      - name: Install dependencies
        run: |
          pip install boto3

      - name: Zip getFact Lambda
        run: |
          zip -j getfact-lambda.zip src/handlers/fact.py src/clients/bedrock_client.py src/utils/logging.py

      - name: Zip login Lambda
        run: |
          zip -j login-lambda.zip src/handlers/user.py src/clients/cognito_client.py src/utils/logging.py src/models/user.py

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Deploy S3 bucket (if needed)
        run: |
          aws cloudformation deploy \
            --template-file serverless-resources/s3.yml \
            --stack-name lambda-deployment-bucket \
            --region ${{ env.AWS_REGION }} \
            --no-fail-on-empty-changeset

      - name: Upload getFact Lambda to S3
        run: aws s3 cp getfact-lambda.zip s3://${{ env.S3_BUCKET }}/getfact-lambda.zip

      - name: Upload login Lambda to S3
        run: aws s3 cp login-lambda.zip s3://${{ env.S3_BUCKET }}/login-lambda.zip

      - name: Deploy getFact Lambda
        run: |
          aws cloudformation deploy \
            --template-file serverless-resources/getfact-lambda.yml \
            --stack-name getfact-lambda \
            --region ${{ env.AWS_REGION }} \
            --no-fail-on-empty-changeset

      - name: Deploy login Lambda
        run: |
          aws cloudformation deploy \
            --template-file serverless-resources/login-lambda.yml \
            --stack-name login-lambda \
            --region ${{ env.AWS_REGION }} \
            --no-fail-on-empty-changeset

      - name: Deploy IAM resources
        run: |
          aws cloudformation deploy \
            --template-file serverless-resources/iam.yml \
            --stack-name super-app-iam \
            --region ${{ env.AWS_REGION }} \
            --no-fail-on-empty-changeset

      - name: Deploy Cognito resources
        run: |
          aws cloudformation deploy \
            --template-file serverless-resources/cognito.yml \
            --stack-name super-app-cognito \
            --region ${{ env.AWS_REGION }} \
            --no-fail-on-empty-changeset

      - name: Deploy API Gateway resources
        run: |
          aws cloudformation deploy \
            --template-file serverless-resources/apigateway.yml \
            --stack-name super-app-apigateway \
            --region ${{ env.AWS_REGION }} \
            --no-fail-on-empty-changeset
